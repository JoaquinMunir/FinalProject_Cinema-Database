<input class="@Class" maxlength="8" value="@displayValue"
       @oninput="OnInput" @onblur="OnBlur" />

@code {
    [Parameter]
    public TimeSpan? Value { get; set; }

    [Parameter]
    public EventCallback<TimeSpan?> ValueChanged { get; set; }

    [Parameter]
    public string Class { get; set; }

    private string displayValue = "";

    protected override void OnParametersSet()
    {
        if (Value.HasValue)
        {
            displayValue = Value.Value.ToString(@"hh\:mm\:ss");
        }
        else
        {
            displayValue = "";
        }
    }

    private async Task OnInput(ChangeEventArgs e)
    {
        var input = e.Value?.ToString() ?? "";

        // Permitimos solo dígitos y ':'
        if (input.All(c => char.IsDigit(c) || c == ':'))
        {
            displayValue = input;
            // No intentamos parsear ni formatear aquí para no bloquear la entrada
        }
        // Ignorar otros caracteres (no actualizamos displayValue)
        await Task.CompletedTask;
    }

    private async Task OnBlur(FocusEventArgs e)
    {
        // Cuando el usuario sale del input intentamos parsear y formatear
        if (TimeSpan.TryParse(displayValue, out var ts))
        {
            displayValue = ts.ToString(@"hh\:mm\:ss");
            await ValueChanged.InvokeAsync(ts);
        }
        else
        {
            // Valor inválido, limpiamos o notificamos
            displayValue = "";
            await ValueChanged.InvokeAsync(null);
        }
    }
}
