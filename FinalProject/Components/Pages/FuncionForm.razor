@page "/funciones/nueva"
@page "/funciones/editar/{Id:int}"
@inject NavigationManager navigation
@inject IRepoFunciones repoFunciones
@inject IRepoPeliculas repoPeliculas
@inject IRepoSalas repoSalas

@rendermode InteractiveServer

<PageTitle>Funciones</PageTitle>
<h3>@_titulo Función</h3>

<EditForm Model="_funcion" FormName="frmFuncion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <!-- Película (Select) -->
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Película</label>
        <div class="col-sm-10">
            <InputSelect @bind-Value="_funcion.IdPelicula" class="form-control">
                <option value="">Seleccione una película...</option>
                @foreach (var pelicula in _peliculas)
                {
                    <option value="@pelicula.Id">@pelicula.Titulo</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _funcion.IdPelicula)" />
        </div>
    </div>

    <!-- Fecha -->
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Fecha</label>
        <div class="col-sm-10">
            <InputDate class="form-control" @bind-Value="_funcion.Fecha" />
            <ValidationMessage For="@(() => _funcion.Fecha)" />
        </div>
    </div>

    <!-- Duración -->
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Horario</label>
        <div class="col-sm-10">
            <InputTime @bind-Value="_funcion.Horario" class="form-control" />
            <ValidationMessage For="@(() => _funcion.Horario)" />
        </div>
    </div>
    
    <!-- Sala (Select) -->
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Sala</label>
        <div class="col-sm-10">
            <InputSelect @bind-Value="_funcion.IdSala" class="form-control">
                <option value="">Seleccione una sala...</option>
                @foreach (var sala in _salas)
                {
                    <option value="@sala.Id">Sala @sala.Numero (@sala.Tipo)</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _funcion.IdSala)" />
        </div>
    </div>

    <!-- Formato -->
    <div class="mb-3 row">
        <label class="col-sm-2 col-form-label">Formato</label>
        <div class="col-sm-10">
            <InputSelect @bind-Value="_funcion.Formato" class="form-control">
                <option value=""></option>
                @foreach (Formato formato in Enum.GetValues(typeof(Formato)))
                {
                    <option value="@formato">@formato.GetDisplayName()</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _funcion.Formato)" />
        </div>
    </div>

    <!-- Botones -->
    <div class="row">
        <div class="col-sm-10 offset-sm-2">
            <button type="submit" class="btn btn-primary">Guardar</button>
            <button type="button" class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private Funcion _funcion = new();
    private List<Pelicula> _peliculas = new();
	private List<Sala> _salas = new();
    private string _titulo = "Nueva ";

    protected override async Task OnInitializedAsync()
    {
        _peliculas = await repoPeliculas.GetAll();
        _salas = await repoSalas.GetAll();

        if (Id > 0)
        {
            _funcion = await repoFunciones.Get(Id);
            _titulo = "Modificar ";
        }
        else
        {
            _funcion.Fecha = DateTime.Today;
            _funcion.Horario = new TimeSpan(18, 0, 0);
        }
    }

    private async Task Guardar()
    {
        Console.WriteLine("Método Guardar iniciado");

        try
        {
            if (Id > 0)
            {
                await repoFunciones.Update(_funcion);
                Console.WriteLine("Update done");
            }
            else
            {
                await repoFunciones.Add(_funcion);
                Console.WriteLine("Add done");
            }

            Cancelar();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error en guardar: {ex.Message}");
        }
    }


    private void Cancelar()
    {
        navigation.NavigateTo("/funciones");
    }
}
